{"version":3,"file":"angular-rave.umd.js.map","sources":["ng://angular-rave/lib/angular-rave.component.ts","ng://angular-rave/lib/angular-rave.directive.ts","ng://angular-rave/lib/rave-options.ts","ng://angular-rave/lib/angular-rave.module.ts"],"sourcesContent":["import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\r\nimport { PrivateRaveOptions } from './rave-options';\r\n\r\ninterface MyWindow extends Window {\r\n  getpaidSetup: (raveOptions: Partial<PrivateRaveOptions>) => void;\r\n}\r\n\r\ndeclare var window: MyWindow;\r\n\r\n@Component({\r\n  selector: 'angular-rave', // tslint:disable-line\r\n  template: `<ng-content></ng-content>`\r\n})\r\n\r\nexport class AngularRaveComponent implements OnInit {\r\n  @Input() PBFPubKey: string;\r\n  @Input() integrity_hash: string;\r\n  @Input() txref: string;\r\n  @Input() payment_method: string;\r\n  @Input() amount: number;\r\n  @Input() currency: string;\r\n  @Input() country: string;\r\n  @Input() payment_plan: number;\r\n  @Input() customer_email: string;\r\n  @Input() customer_phone: string;\r\n  @Input() customer_firstname: string;\r\n  @Input() customer_lastname: string;\r\n  @Input() subaccount: { id: string, transaction_split_ratio: string }[];\r\n  @Input() pay_button_text: string;\r\n  @Input() custom_title: string;\r\n  @Input() custom_description: string;\r\n  @Input() redirect_url: string;\r\n  @Input() custom_logo: string;\r\n  @Input() meta: any;\r\n  @Input() raveOptions: Partial<PrivateRaveOptions>;\r\n  @Output() onclose: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() callback: EventEmitter<Object> = new EventEmitter<Object>();\r\n  @Output() init: EventEmitter<Object> = new EventEmitter<Object>();\r\n  private _raveOptions: Partial<PrivateRaveOptions> = {};\r\n  private paymentSetup: any;\r\n\r\n  constructor() { }\r\n\r\n  async pay() {\r\n    if (this.init) {\r\n      this.init.emit();\r\n    }\r\n    await this.loadScript();\r\n    if (typeof window.getpaidSetup !== 'function') {\r\n      return console.error('ANGULAR-RAVE: Please verify that you imported rave\\'s script into your index.html');\r\n    }\r\n    // If the raveoptions Input is present then use it\r\n    if (this.raveOptions && Object.keys(this.raveOptions).length > 3) {\r\n      if (this.validateOptions()) {\r\n        this.paymentSetup = window.getpaidSetup(this.raveOptions);\r\n      }\r\n    } else {\r\n      if (this.validateInput()) {\r\n        this.insertRaveOptions();\r\n        this.paymentSetup = window.getpaidSetup(this._raveOptions);\r\n      }\r\n    }\r\n  }\r\n\r\n  insertRaveOptions() {\r\n    if (this.amount) { this._raveOptions.amount = this.amount; }\r\n    if (this.PBFPubKey) { this._raveOptions.PBFPubKey = this.PBFPubKey; }\r\n    if (this.payment_method) { this._raveOptions.payment_method = this.payment_method; }\r\n    if (this.redirect_url) { this._raveOptions.redirect_url = this.redirect_url; }\r\n    if (this.integrity_hash) { this._raveOptions.integrity_hash = this.integrity_hash; }\r\n    if (this.pay_button_text) { this._raveOptions.pay_button_text = this.pay_button_text; }\r\n    if (this.country) { this._raveOptions.country = this.country; }\r\n    if (this.payment_plan) { this._raveOptions.payment_plan = this.payment_plan; }\r\n    if (this.currency) { this._raveOptions.currency = this.currency; }\r\n    if (this.custom_description) { this._raveOptions.custom_description = this.custom_description; }\r\n    if (this.customer_email) { this._raveOptions.customer_email = this.customer_email; }\r\n    if (this.custom_logo) { this._raveOptions.custom_logo = this.custom_logo; }\r\n    if (this.custom_title) { this._raveOptions.custom_title = this.custom_title; }\r\n    if (this.customer_firstname) { this._raveOptions.customer_firstname = this.customer_firstname; }\r\n    if (this.subaccount) { this._raveOptions.subaccount = this.subaccount; }\r\n    if (this.customer_lastname) { this._raveOptions.customer_lastname = this.customer_lastname; }\r\n    if (this.txref) { this._raveOptions.txref = this.txref; }\r\n    if (this.customer_phone) { this._raveOptions.customer_phone = this.customer_phone; }\r\n    if (this.onclose) { this._raveOptions.onclose = () => this.onclose.emit(); }\r\n    if (this.init) { this._raveOptions.init = () => this.init.emit(); }\r\n    if (this.callback) {\r\n      this._raveOptions.callback = (res) => {\r\n        this.onclose.emit(res);\r\n        this.paymentSetup.close();\r\n      };\r\n    }\r\n  }\r\n\r\n  loadScript(): Promise<void> {\r\n    return new Promise(resolve => {\r\n      if (typeof window.getpaidSetup === 'function') {\r\n        resolve();\r\n        return;\r\n      }\r\n      const script = window.document.createElement('script');\r\n      window.document.head.appendChild(script);\r\n      const onLoadFunc = () => {\r\n        script.removeEventListener('load', onLoadFunc);\r\n        resolve();\r\n      };\r\n      script.addEventListener('load', onLoadFunc);\r\n      script.setAttribute('src', 'https://ravesandboxapi.flutterwave.com/flwv3-pug/getpaidx/api/flwpbf-inline.js');\r\n    });\r\n  }\r\n\r\n  validateOptions() {\r\n    if (!this.raveOptions.PBFPubKey) { return console.error('ANGULAR-RAVE: Merchant public key is required'); }\r\n    if (!(this.raveOptions.customer_email || this.raveOptions.customer_phone)) {\r\n      return console.error('ANGULAR-RAVE: Customer email or phone number is required');\r\n    }\r\n    if (!this.raveOptions.txref) { return console.error('ANGULAR-RAVE: A unique transaction reference is required'); }\r\n    if (!this.raveOptions.amount) { return console.error('ANGULAR-RAVE: Amount to charge is required'); }\r\n    if (!this.callback.observers.length) { return console.error('ANGULAR-RAVE: You should attach to callback to verify your transaction'); }\r\n    this.raveOptions.callback = res => {\r\n      this.callback.emit(res);\r\n      this.paymentSetup.close();\r\n    };\r\n    return true;\r\n  }\r\n\r\n  validateInput() {\r\n    if (!this.PBFPubKey) { return console.error('ANGULAR-RAVE: Merchant public key is required'); }\r\n    if (!(this.customer_email || this.customer_phone)) { return console.error('ANGULAR-RAVE: Customer email or phone number is required'); }\r\n    if (!this.txref) { return console.error('ANGULAR-RAVE: A unique transaction reference is required'); }\r\n    if (!this.amount) { return console.error('ANGULAR-RAVE: Amount to charge is required'); }\r\n    if (!this.callback) { return console.error('ANGULAR-RAVE: You should attach to callback to verify your transaction'); }\r\n    return true;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.pay();\r\n  }\r\n}\r\n","import { Directive, Input, Output, HostListener, EventEmitter } from '@angular/core';\r\n\r\nimport { PrivateRaveOptions } from './rave-options';\r\n\r\ninterface MyWindow extends Window {\r\n  getpaidSetup: (raveOptions: Partial<PrivateRaveOptions>) => void;\r\n}\r\n\r\ndeclare var window: MyWindow;\r\n\r\n@Directive({\r\n  selector: '[angular-rave]' // tslint:disable-line\r\n})\r\nexport class AngularRaveDirective {\r\n  @Input() PBFPubKey: string;\r\n  @Input() integrity_hash: string;\r\n  @Input() txref: string;\r\n  @Input() payment_method: string;\r\n  @Input() amount: number;\r\n  @Input() currency: string;\r\n  @Input() country: string;\r\n  @Input() payment_plan: number;\r\n  @Input() customer_email: string;\r\n  @Input() customer_phone: string;\r\n  @Input() customer_firstname: string;\r\n  @Input() customer_lastname: string;\r\n  @Input() pay_button_text: string;\r\n  @Input() custom_title: string;\r\n  @Input() subaccount: { id: string, transaction_split_ratio: string }[];\r\n  @Input() custom_description: string;\r\n  @Input() redirect_url: string;\r\n  @Input() custom_logo: string;\r\n  @Input() meta: any;\r\n  @Input() raveOptions: Partial<PrivateRaveOptions> = {};\r\n  @Output() onclose: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() callback: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() init: EventEmitter<Object> = new EventEmitter<Object>();\r\n  private _raveOptions: Partial<PrivateRaveOptions> = {};\r\n  private paymentSetup;\r\n\r\n  constructor() { }\r\n\r\n  @HostListener('click')\r\n  buttonClick() {\r\n    this.pay();\r\n  }\r\n\r\n  async pay() {\r\n    if (this.init) {\r\n      this.init.emit();\r\n    }\r\n    await this.loadScript();\r\n    if (typeof window.getpaidSetup !== 'function') {\r\n      return console.error('ANGULAR-RAVE: Please verify that you imported rave\\'s script into your index.html');\r\n    }\r\n    // If the raveoptions Input is present then use\r\n    if (this.raveOptions && Object.keys(this.raveOptions).length > 3) {\r\n      if (this.validateOptions()) {\r\n        this.paymentSetup = window.getpaidSetup(this.raveOptions);\r\n      }\r\n    } else {\r\n      if (this.validateInput()) {\r\n        this.insertRaveOptions();\r\n        this.paymentSetup = window.getpaidSetup(this._raveOptions);\r\n      }\r\n    }\r\n  }\r\n\r\n  insertRaveOptions() {\r\n    if (this.amount) { this._raveOptions.amount = this.amount; }\r\n    if (this.PBFPubKey) { this._raveOptions.PBFPubKey = this.PBFPubKey; }\r\n    if (this.payment_method) { this._raveOptions.payment_method = this.payment_method; }\r\n    if (this.redirect_url) { this._raveOptions.redirect_url = this.redirect_url; }\r\n    if (this.integrity_hash) { this._raveOptions.integrity_hash = this.integrity_hash; }\r\n    if (this.pay_button_text) { this._raveOptions.pay_button_text = this.pay_button_text; }\r\n    if (this.country) { this._raveOptions.country = this.country; }\r\n    if (this.payment_plan) { this._raveOptions.payment_plan = this.payment_plan; }\r\n    if (this.currency) { this._raveOptions.currency = this.currency; }\r\n    if (this.custom_description) { this._raveOptions.custom_description = this.custom_description; }\r\n    if (this.customer_email) { this._raveOptions.customer_email = this.customer_email; }\r\n    if (this.custom_logo) { this._raveOptions.custom_logo = this.custom_logo; }\r\n    if (this.custom_title) { this._raveOptions.custom_title = this.custom_title; }\r\n    if (this.customer_firstname) { this._raveOptions.customer_firstname = this.customer_firstname; }\r\n    if (this.customer_lastname) { this._raveOptions.customer_lastname = this.customer_lastname; }\r\n    if (this.subaccount) { this._raveOptions.subaccount = this.subaccount; }\r\n    if (this.customer_phone) { this._raveOptions.customer_phone = this.customer_phone; }\r\n    if (this.txref) { this._raveOptions.txref = this.txref; }\r\n    if (this.init) { this._raveOptions.init = () => this.init.emit(); }\r\n    if (this.onclose) { this._raveOptions.onclose = () => this.onclose.emit(); }\r\n    if (this.callback) {\r\n      this._raveOptions.callback = (res) => {\r\n        this.onclose.emit(res);\r\n        this.paymentSetup.close();\r\n      };\r\n    }\r\n  }\r\n\r\n  validateOptions() {\r\n    if (!this.raveOptions.PBFPubKey) { return console.error('ANGULAR-RAVE: Merchant public key is required'); }\r\n    if (!(this.raveOptions.customer_email || this.raveOptions.customer_phone)) {\r\n      return console.error('ANGULAR-RAVE: Customer email or phone number is required');\r\n    }\r\n    if (!this.raveOptions.txref) { return console.error('ANGULAR-RAVE: A unique transaction reference is required'); }\r\n    if (!this.raveOptions.amount) { return console.error('ANGULAR-RAVE: Amount to charge is required'); }\r\n    if (!this.callback.observers.length) { return console.error('ANGULAR-RAVE: You should attach to callback to verify your transaction'); }\r\n    if (this.onclose.observers.length) { this.raveOptions.onclose = () => this.onclose.emit(); }\r\n    this.raveOptions.callback = res => {\r\n      this.callback.emit(res);\r\n      this.paymentSetup.close();\r\n    };\r\n    return true;\r\n  }\r\n\r\n  loadScript(): Promise<void> {\r\n    return new Promise(resolve => {\r\n      if (typeof window.getpaidSetup === 'function') {\r\n        resolve();\r\n        return;\r\n      }\r\n      const script = window.document.createElement('script');\r\n      window.document.head.appendChild(script);\r\n      const onLoadFunc = () => {\r\n        script.removeEventListener('load', onLoadFunc);\r\n        resolve();\r\n      };\r\n      script.addEventListener('load', onLoadFunc);\r\n      script.setAttribute('src', 'https://ravesandboxapi.flutterwave.com/flwv3-pug/getpaidx/api/flwpbf-inline.js');\r\n    });\r\n  }\r\n\r\n  validateInput() {\r\n    if (!this.PBFPubKey) { return console.error('ANGULAR-RAVE: Merchant public key is required'); }\r\n    if (!(this.customer_email || this.customer_phone)) { return console.error('ANGULAR-RAVE: Customer email or phone number is required'); }\r\n    if (!this.txref) { return console.error('ANGULAR-RAVE: A unique transaction reference is required'); }\r\n    if (!this.amount) { return console.error('ANGULAR-RAVE: Amount to charge is required'); }\r\n    if (!this.callback) { return console.error('ANGULAR-RAVE: You should attach to callback to verify your transaction'); }\r\n    return true;\r\n  }\r\n\r\n}\r\n","export class RaveOptions {\r\n  /**\r\n   * Your merchant public key provided when you create a button\r\n   */\r\n  PBFPubKey: string;\r\n  /**\r\n   * Email of the customer\r\n   */\r\n  customer_email?: string;\r\n  /**\r\n   * Firstname of the customer\r\n   */\r\n  customer_firstname?: string;\r\n  /**\r\n   * firstname of the customer\r\n   */\r\n  customer_lastname?: string;\r\n  /**\r\n   * Text to be displayed as a short modal description\r\n   */\r\n  custom_description?: string;\r\n  /**\r\n   * Link to your custom image\r\n   */\r\n  custom_logo?: string;\r\n  /**\r\n   * Text to be displayed as the title of the payment modal\r\n   */\r\n  custom_title?: string;\r\n  /**\r\n   * Amount to charge\r\n   */\r\n  amount: number;\r\n  /**\r\n   * phone number of the customer\r\n   */\r\n  customer_phone?: string;\r\n  /**\r\n   * URL to redirect to when transaction is completed.\r\n   */\r\n  redirect_url?: string;\r\n  /**\r\n   * route country. Default NG\r\n   */\r\n  country?: string;\r\n\r\n  payment_plan?: number;\r\n  /**\r\n   * currency to charge the card in. Default \"NGN\"\r\n   */\r\n  currency?: string;\r\n  /**\r\n   * This allows you select the payment option you want for your users, possible values are card, account or both\r\n   */\r\n  payment_method?: string;\r\n  /**\r\n   * Text to be displayed on the Rave Checkout Button\r\n   */\r\n  pay_button_text?: string;\r\n  /**\r\n   * Unique transaction reference provided by the merchant\r\n   */\r\n  txref: string;\r\n  /**\r\n   * This is a sha256 hash of your getpaidSetup values, it is used for passing secured values to the payment gateway\r\n   */\r\n  integrity_hash?: string;\r\n  /**\r\n   * The value to be passed for this is 1. This is useful when customer is using an opera browser, it\r\n   * would load the payment modal on a new page.\r\n   */\r\n  hosted_payment?: 1;\r\n  /**\r\n   * Any other custom data you wish to pass.\r\n   */\r\n  meta?: any;\r\n  /**\r\n   * Subaccounts to split payment with\r\n   * https://developer.flutterwave.com/v2.0/docs/split-payment\r\n   */\r\n  subaccount?: { id: string, transaction_split_ratio: string }[];\r\n}\r\n\r\nexport class PrivateRaveOptions extends RaveOptions {\r\n  /**\r\n   * A function to be called on successful card charge. Userâs can always be redirected to a successful or\r\n   * failed page supplied by the merchant here based on response\r\n   * @param response?: The server response\r\n   */\r\n  callback: (response?: any) => void;\r\n  /**\r\n   * A function to be called when the pay modal is closed.\r\n   */\r\n  onclose: () => void;\r\n  /**\r\n   * A function to be called when payment is about to begin\r\n   */\r\n  init: () => void;\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { AngularRaveComponent } from './angular-rave.component';\r\nimport { AngularRaveDirective } from './angular-rave.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [AngularRaveComponent, AngularRaveDirective],\r\n  declarations: [AngularRaveComponent, AngularRaveDirective],\r\n  providers: [],\r\n})\r\nexport class AngularRaveModule { }\r\n"],"names":["EventEmitter","Component","Input","Output","Directive","HostListener","tslib_1.__extends","NgModule"],"mappings":"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"}
